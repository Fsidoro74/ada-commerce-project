package br.com.ada.ecommerce.service;

import br.com.ada.ecommerce.model.*;

public class PedidoService {

    public void adicionarItemAoPedido(Pedido pedido, Produto produto, int quantidade, double precoVenda) {
        ItemPedido item = new ItemPedido(produto, quantidade, precoVenda);
        pedido.adicionarItem(item);
    }

    public void exibirResumoPedido(Pedido pedido) {
        pedido.exibirResumo();
    }

    public void finalizarPedido(Pedido pedido) {
        if (pedido.podeFinalizar()) {
            pedido.setStatus(StatusPedido.AGUARDANDO_PAGAMENTO);
            System.out.println("‚úÖ Pedido finalizado com sucesso!");
            enviarEmail(pedido.getCliente(), "Seu pedido foi finalizado e est√° aguardando pagamento.");
        } else {
            System.out.println("‚ö†Ô∏è Pedido n√£o pode ser finalizado. Verifique se h√° itens e valor maior que zero.");
        }
    }

    public void realizarPagamento(Pedido pedido) {
        if (pedido.getStatus() == StatusPedido.AGUARDANDO_PAGAMENTO) {
            pedido.setStatus(StatusPedido.PAGO);
            System.out.println("üí≥ Pagamento realizado com sucesso!");
            enviarEmail(pedido.getCliente(), "Pagamento confirmado! Seu pedido ser√° entregue em breve.");
        } else {
            System.out.println("‚ùå Pagamento n√£o permitido. O pedido n√£o est√° aguardando pagamento.");
        }
    }

    public void realizarEntrega(Pedido pedido) {
        if (pedido.getStatus() == StatusPedido.PAGO) {
            pedido.setStatus(StatusPedido.FINALIZADO);
            System.out.println("üì¶ Pedido entregue com sucesso!");
            enviarEmail(pedido.getCliente(), "Seu pedido foi entregue. Obrigado por comprar com a Ada Commerce!");
        } else {
            System.out.println("‚ùå Entrega n√£o permitida. O pedido ainda n√£o foi pago.");
        }
    }

    private void enviarEmail(Cliente cliente, String mensagem) {
        System.out.println("üìß Enviando e-mail para " + cliente.getNome() + ": " + mensagem);
    }
}
